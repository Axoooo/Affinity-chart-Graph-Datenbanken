
Neo4j Anmeldung

cypher-shell
username: neo4j
password: 1234

-----------------------------------------------------------------------------------------------------

MATCH (n) RETURN (n);
MATCH (n) OPTIONAL MATCH (n)-[r]-() RETURN n, r;
MATCH (n) OPTIONAL MATCH (n)-[r]-(m) RETURN n, r, m;

MATCH (n) OPTIONAL MATCH (n)-[r]-(m)
DELETE n, r, m;

-----------------------------------------------------------------------------------------------------
// Nation

MATCH (keves), (agnus)
DELETE keves, agnus;

CREATE
(:Nation {name: 'Keves'}),
(:Nation {name: 'Agnus'});

MATCH (keves:Nation),(agnus:Nation)
WHERE keves.name = 'Keves' AND agnus.name = 'Agnus'
RETURN keves.name, agnus.name;


-----------------------------------------------------------------------------------------------------
// Characters

MATCH
(queenM), (noah), (lanz), (eunie),
(queenN), (mio), (sena), (taion)
DELETE queenM, noah, lanz, eunie, queenN, mio, sena, taion;


CREATE
(:Character {name: 'Queen Melia'}),
(:Character {name: 'Noah'}),
(:Character {name: 'Lanz'}),
(:Character {name: 'Eunie'}),
(:Character {name: 'Queen Nia'}),
(:Character {name: 'Mio'}),
(:Character {name: 'Sena'}),
(:Character {name: 'Taion'});


MATCH
(queenM:Character),(noah:Character), (lanz:Character), (eunie:Character),
(queenN:Character),(mio:Character), (sena:Character), (taion:Character)

WHERE
queenM.name = 'Queen Melia' AND noah.name = 'Noah' AND lanz.name = 'Lanz' AND eunie.name = 'Eunie' AND
queenN.name = 'Queen Nia' AND mio.name = 'Mio' AND sena.name = 'Sena' AND taion.name = 'Taion'

RETURN
queenM.name, noah.name, lanz.name, eunie.name,
queenN.name, mio.name, sena.name, taion.name;

-----------------------------------------------------------------------------------------------------
// Role

CREATE
(:Role {name: 'Attacker'}),
(:Role {name: 'Defender'}),
(:Role {name: 'Healer'});
(:Role {name: 'Queen'});

MATCH
(attack:Role), (defend:Role), (heal:Role), (queen:Role)

WHERE
attack.name = 'Attacker' AND defend.name = 'Defender' AND heal.name = 'Healer' AND queen.name = 'Queen'

RETURN
attack.name, defend.name, heal.name, queen.name;

-----------------------------------------------------------------------------------------------------------------

// Relationships: Character -> ... -> Character

MATCH
(noah:Character), (mio:Character)
WHERE
noah.name = 'Noah' AND mio.name = 'Mio'
CREATE
(noah)-[r: has_interlink_with]->(mio);

MATCH
(lanz:Character), (sena:Character)
WHERE
lanz.name = 'Lanz' AND sena.name = 'Sena'
CREATE
(lanz)-[r: has_interlink_with]->(sena);

MATCH
(eunie:Character), (taion:Character)
WHERE
eunie.name = 'Eunie' AND taion.name = 'Taion'
CREATE
(eunie)-[r: has_interlink_with]->(taion);

MATCH
(queenM:Character), (queenN:Character)
WHERE
queenM.name = 'Queen Melia' AND queenN.name = 'Queen Nia'
CREATE
(queenM)-[r: is_friends_with]->(queenN);

MATCH (n) OPTIONAL MATCH (n)-[r]-(m) RETURN n, r, m;

-----------------------------------------------------------------------------------------------------------------

// Relationships: Character -> ... -> Nation

MATCH
(queenM:Character), (keves:Nation)
WHERE
queenM.name = 'Queen Melia' AND keves.name = 'Keves'
CREATE
(queenM)-[function: rules_over]->(keves);

MATCH
(queenN:Character), (agnus:Nation)
WHERE
queenN.name = 'Queen Nia' AND agnus.name = 'Agnus'
CREATE
(queenN)-[function: rules_over]->(agnus);

-----------------------------------------------------------------------------------------------------------------

// Relationships: Character -> ... -> Role

MATCH
(noah:Character), (attack:Role)
WHERE
noah.name = 'Noah' AND attack.name = 'Attacker'
CREATE
(noah)-[r: is]->(attack);

MATCH
(lanz:Character), (defend:Role)
WHERE
lanz.name = 'Lanz' AND defend.name = 'Defender'
CREATE
(lanz)-[r: is]->(defend);

MATCH
(eunie:Character), (heal:Role)
WHERE
eunie.name = 'Eunie' AND heal.name = 'Healer'
CREATE
(eunie)-[r: is]->(heal);

MATCH
(mio:Character), (attack:Role)
WHERE
mio.name = 'Mio' AND attack.name = 'Attacker'
CREATE
(mio)-[r: is]->(attack);

MATCH
(sena:Character), (defend:Role)
WHERE
sena.name = 'Sena' AND defend.name = 'Defender'
CREATE
(sena)-[r: is]->(defend);

MATCH
(taion:Character), (heal:Role)
WHERE
taion.name = 'Taion' AND heal.name = 'Healer'
CREATE
(taion)-[r: is]->(heal);

MATCH
(queenM:Character), (queen:Role)
WHERE
queenM.name = 'Queen Melia' AND queen.name = 'Queen'
CREATE
(queenM)-[r: is]->(queen);

MATCH
(queenN:Character), (queen:Role)
WHERE
queenN.name = 'Queen Nia' AND queen.name = 'Queen'
CREATE
(queenN)-[r: is]->(queen);

MATCH (n) OPTIONAL MATCH (n)-[r]-(m) RETURN n, r, m;